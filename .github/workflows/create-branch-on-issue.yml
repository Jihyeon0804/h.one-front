# 파일 경로: .github/workflows/create-branch-on-issue.yml

name: Create Branch on New Issue (Title-based)

# 워크플로우 실행 조건: 이슈가 새로 생성되었을 때
on:
  issues:
    types: [opened]

jobs:
  create_branch_job:
    runs-on: ubuntu-latest
    steps:
      # 1. 저장소 코드를 워크플로우 환경으로 가져옵니다.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. 이슈 정보로 브랜치 이름을 생성합니다.
      - name: Create Branch Name
        id: branch_name
        run: |
          issue_title="${{ github.event.issue.title }}"
          
          if [[ $issue_title == \[*\]* ]]; then
            feature_name=$(echo "$issue_title" | sed -n 's/\[\(.*\)\] .*/\1/p' | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g' | sed 's/[^a-z0-9-]//g')
          else
            feature_name=$(echo "$issue_title" | tr '[:upper:]' '[:lower:]' | sed 's/ /-/g' | sed 's/[^a-z0-9-]//g')
          fi

          issue_number="${{ github.event.issue.number }}"
          
          echo "branch_name=feature/${issue_number}-${feature_name}" >> $GITHUB_OUTPUT

      # 3. 위에서 만든 이름으로 브랜치를 생성하고 원격 저장소에 push합니다.
      - name: Create and Push Branch
        run: |
          BRANCH_NAME="${{ steps.branch_name.outputs.branch_name }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

      # 4. 생성된 브랜치 정보를 이슈에 댓글로 남깁니다.
      - name: Comment on Issue
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **자동 생성된 브랜치:** \`${{ steps.branch_name.outputs.branch_name }}\``
            })